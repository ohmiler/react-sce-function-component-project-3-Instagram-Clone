{"version":3,"sources":["firebase/firebaseConfig.js","firebase/firebase.js","logo.svg","components/CommentBox.js","components/Comments.js","components/Post.js","components/Auth.js","components/PostUpload.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","firebase","initializeApp","db","firestore","auth","storage","Wrapper","styled","form","InputComment","input","InputButton","button","Propmt","h4","CommentBox","user","postID","setNewComment","useState","comment","setComment","type","placeholder","value","onChange","e","target","onClick","event","newComment","username","displayName","timestamp","FieldValue","serverTimestamp","preventDefault","collection","doc","add","MoreComment","p","Comment","StyledCommentContainer","StyledUsername","StyledComment","div","h5","Comments","comments","setComments","moreComments","setMorecomments","docs","setDocs","loadComment","query","orderBy","length","lastVisible","startAfter","limit","get","then","snapshot","map","data","useEffect","id","Post","caption","imageURL","className","Avatar","alt","src","Auth","igLogo","openModal","setOpenModal","openModalLogin","setOpenModalLogin","setUser","classes","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","marginTop","useStyles","top","left","transform","modalStyle","setUsername","password","setPassword","email","setEmail","handleButtonPress","signInWithEmailAndPassword","catch","error","alert","message","createUserWithEmailAndPassword","authUser","updateProfile","handleKeyPress","key","Modal","open","onClose","style","Input","onKeyPress","Button","variant","color","randomName","Math","random","toString","replace","substr","signInAnonymously","PostUpload","setNewPost","currentUser","file","setFile","setCaption","progress","setProgress","name","files","max","marginBottom","randomImageName","ref","put","on","round","bytesTransferred","totalBytes","console","log","child","getDownloadURL","url","newPost","post","reason","addPost","App","IG_LOGO","posts","setPosts","fetching","setFetching","morePost","setMorePost","unsubscribe","onAuthStateChanged","fetchData","setTimeout","Object","keys","onScroll","scrollHeight","scrollTop","clientHeight","signOut","CircularProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04aa5561.chunk.js","sourcesContent":["const firebaseConfig = {\n    apiKey: \"AIzaSyAwHZJhcjanBKzEZfbC3GZbK_Xtk-1sds0\",\n    authDomain: \"instagram-clone-21074.firebaseapp.com\",\n    projectId: \"instagram-clone-21074\",\n    storageBucket: \"instagram-clone-21074.appspot.com\",\n    messagingSenderId: \"550545454923\",\n    appId: \"1:550545454923:web:5938a35d3545afd6b35ace\",\n    measurementId: \"G-YQ01NYXQMX\"\n};\n\nexport default firebaseConfig;","import firebase from 'firebase'\nimport firebaseConfig from './firebaseConfig'\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nconst db = firebaseApp.firestore();\nconst auth = firebaseApp.auth();\nconst storage = firebaseApp.storage();\n\nexport { db, auth, storage }","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\nimport styled from 'styled-components/macro'\nimport { db } from '../firebase/firebase'\nimport firebase from 'firebase'\n\nconst Wrapper = styled.form`\n    display: flex;\n    align-items: center;\n    border-top: 1px solid #cacaca;\n`\n\nconst InputComment = styled.input`\n    flex: 1;\n    padding: 10px;\n    border: none;\n`\n\nconst InputButton = styled.button`\n    flex: 0;\n    border: none;\n    color: #6082a3;\n    padding: 10px;\n    background-color: white;\n`\n\nconst Propmt = styled.h4`\n    text-align: center;\n    padding: 10px;\n    border-top: 1px solid #cacaca;\n`\n\nconst CommentBox = ({ user, postID, setNewComment }) => {\n\n    const [comment, setComment] = useState(\"\");\n    const submitHandler = (event) => {\n        const newComment = {\n            comment: comment,\n            username: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        }\n        event.preventDefault();\n\n        db.collection(\"posts\")\n          .doc(postID)\n          .collection(\"comments\")\n          .add(newComment)\n          setNewComment(newComment)\n          setComment(\"\")\n    }\n\n    return (\n        <>\n            {user ? \n                <Wrapper>\n                    <InputComment\n                        type=\"text\"\n                        placeholder=\"Add comment here...\"\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                    />\n                    <InputButton onClick={submitHandler}>Submit</InputButton>\n                </Wrapper>\n                :\n                <Propmt>Login to comment</Propmt>\n            }\n        </>\n    )\n}\n\nexport default CommentBox\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components/macro'\nimport { db } from '../firebase/firebase'\n\nconst Comments = ({ postID, newComment }) => {\n\n    const [comments, setComments] = useState([]);\n    const [moreComments, setMorecomments] = useState(true);\n    const [docs, setDocs] = useState([]);\n\n    const loadComment = () => {\n        let query;\n        if (postID) {\n            query = db.collection(\"posts\")\n                      .doc(postID)\n                      .collection(\"comments\")\n                      .orderBy('timestamp', 'desc')\n\n            if (comments.length !== 0) {\n                const lastVisible = docs[docs.length-1];\n                query = query.startAfter(lastVisible).limit(10)\n            } else {\n                query = query.limit(3);\n            }\n            \n            query.get().then((snapshot) => {\n                if (snapshot.docs.length === 0) setMorecomments(false);\n                setComments([...comments, ...snapshot.docs.map((doc) => doc.data())]);\n                setDocs([...docs, ...snapshot.docs])\n            })\n        }\n    }\n\n    useEffect(() => {\n        loadComment();\n    }, [postID]);\n\n    useEffect(() => {\n       setComments(comments => [newComment, ...comments])\n    }, [newComment])\n\n    return (\n        <div>\n            {comments.map((comment, id) => (\n                <Comment key={id} username={comment.username} comment={comment.comment} />\n            ))}\n\n            {\n                moreComments ?\n                <MoreComment onClick={loadComment}>Load more comments...</MoreComment>\n                :\n                null\n            }\n        </div>\n    )\n}\n\nconst MoreComment = styled.p`\n    margin: 0px 20px 10px;\n    font-size: 0.8em;\n    color: grey;\n    cursor: pointer;\n`\n\nconst Comment = ({username, comment}) => {\n    return (\n        <StyledCommentContainer>\n            <StyledUsername>{username}</StyledUsername>\n            <StyledComment>{comment}</StyledComment>\n        </StyledCommentContainer>\n    )\n}\n\nconst StyledCommentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 0px 20px 10px;\n`\n\nconst StyledUsername = styled.h5``\nconst StyledComment = styled.p`\n    margin-left: 10px;\n    font-size: 0.8em;\n`\n\nexport default Comments\n","import React, { useState } from 'react'\nimport '../css/Post.css'\nimport { Avatar } from '@material-ui/core'\nimport CommentBox from './CommentBox'\nimport Comments from './Comments'\n\nconst Post = ({ postID, user, username, caption, imageURL }) => {\n\n    const [newComment, setNewComment] = useState({})\n\n    return (\n        <div className=\"post\">\n            <div className=\"post__header\">\n                <Avatar className=\"post__avatar\" alt={username} src=\"/static/images/avatar/1.jpg\"/>\n                <h4 className=\"post__username\">{username}</h4>\n            </div>\n            <img className=\"post__image\" src={imageURL} alt={username} />\n            <h4 className=\"post__caption\"><strong>{username}</strong> {caption}</h4>\n            <Comments postID={postID} newComment={newComment} />\n            <CommentBox user={user} postID={postID} setNewComment={setNewComment} />\n        </div>\n    )\n}\n\nexport default Post\n","import React, { useState } from 'react'\nimport { auth } from '../firebase/firebase'\nimport { Modal } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport '../css/Auth.css'\nimport { Input, Button } from '@material-ui/core'\n\nconst Auth = ({ igLogo, openModal, setOpenModal, openModalLogin, setOpenModalLogin, setUser }) => {\n    \n    const useStyles = makeStyles((theme) => ({\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        button: {\n            marginTop: 8\n        }\n    }))\n\n    const getModalStyle = () => {\n        const top = 50;\n        const left = 50;\n        return {\n            top: `${top}%`,\n            left: `${top}%`,\n            transform: `translate(-${top}%, -${left}%)`\n        }\n    }\n\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    const registerUser = () => {\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((authUser) => {\n                authUser.user.updateProfile({\n                    displayName: username\n                })\n            })\n            .catch((error) => alert(error.message));\n            setOpenModal(false);\n    }\n\n    const loginUser = () => {\n        auth.signInWithEmailAndPassword(email, password)\n        .catch((error) => alert(error.message));\n        setOpenModalLogin(false);\n    }\n\n    const guestButtonPress = () => {\n        let randomName = \"guest-\" + Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\n        auth.signInAnonymously()\n        .then((user) => {\n            user.user.updateProfile({\n                displayName: randomName\n            }).then((user) => setUser(user))\n            setOpenModalLogin(false);\n        })\n    }\n\n    const handleButtonPress = () => {\n        if (openModalLogin) {\n            loginUser();\n        } else {\n            registerUser();\n        }\n    }\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            handleButtonPress();\n        }\n    }\n    \n    return (\n        <Modal open={openModal || openModalLogin}\n                onClose={() => {setOpenModal(false); setOpenModalLogin(false)}}\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <form className=\"auth__form\">\n                    <center>\n                        <img src={igLogo} alt=\"instagram logo\" />\n                    </center>\n                    <Input placeholder=\"email\" type=\"email\" \n                            onChange={(e) => setEmail(e.target.value)}\n                    />\n\n                    {openModalLogin ?\n                        null\n                        :\n                        <Input placeholder=\"username\" type=\"text\" \n                                onChange={(e) => setUsername(e.target.value)}\n                                onKeyPress={handleKeyPress}\n                        />\n                    }\n\n                    <Input placeholder=\"password\" type=\"password\" \n                            onChange={(e) => setPassword(e.target.value)}\n                            onKeyPress={handleKeyPress}\n                    />\n                    <Button className={classes.button} variant=\"outlined\" color=\"primary\" onClick={handleButtonPress}>\n                        {openModalLogin ? \n                            \"Sign In\"\n                            :\n                            \"Sign Up\"\n                        }\n                    </Button>\n                    {openModalLogin ? \n                        <Button onClick={guestButtonPress}>\n                            Log in as Guest\n                        </Button>\n                        :\n                        null\n                    }\n                </form>\n            </div>\n        </Modal>\n    )\n}\n\nexport default Auth\n","import React, { useState } from 'react'\nimport { Button, Input } from '@material-ui/core'\nimport '../css/PostUpload.css'\nimport { db, storage, auth} from '../firebase/firebase'\nimport firebase from 'firebase'\n\nconst PostUpload = ({ setNewPost }) => {\n\n    const username = auth.currentUser.displayName;\n    const [file, setFile] = useState(null);\n    const [caption, setCaption] = useState(\"\");\n    const [progress, setProgress] = useState(0);\n\n    const chooseFile = (e) => {\n        if (e.target.files[0]) {\n            setFile(e.target.files[0]);\n        }\n    }\n\n    const uploadFile = () => {\n        const imageName = file.name;\n        const randomImageName = imageName + Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\n        const addPost = (caption, username, url) => {\n            const newPost = {\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                caption: caption,\n                username: username,\n                imageURL: url\n            }\n            db.collection(\"posts\").add(newPost).then((doc) => {\n                setNewPost({ \n                    post: newPost,\n                    id: doc.id\n                })\n            }).catch(reason => console.error(reason))\n        }\n\n        const uploadTask = storage.ref(`images/${randomImageName}`).put(file);\n\n        uploadTask.on(\"state_changed\", (snapshot) => {\n            const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n            setProgress(progress)\n        }, (error) => {\n            console.log(error);\n            alert(error.message);\n        }, () => {\n            storage.ref('images').child(randomImageName).getDownloadURL().then(url => {\n                addPost(caption, username, url)\n            })\n            setProgress(0);\n            setFile(null);\n            setCaption('');\n        })\n    }\n\n    return (\n        <div className=\"postupload\">\n            <h1>Upload your image</h1>\n            <Input id=\"fileinput\" style={{ marginTop: \"30px\" }} className=\"child\" type=\"file\" name=\"upload-file\" onChange={chooseFile} />\n            <progress className=\"child\" max={100} value={progress} />\n            <Input className=\"child\" type=\"text\" name=\"upload-caption\" placeholder=\"write your caption here\" \n                    value={caption} onChange={(e) => setCaption(e.target.value)}\n            />\n            <Button\n                variant=\"contained\"\n                style={{\n                    backgroundColor: \"#228B22\",\n                    padding: \"10px 15px\",\n                    marginBottom: \"30px\",\n                    color: \"white\"\n                }}\n                className=\"child\"\n                onClick={uploadFile}\n            >\n                Upload\n            </Button>\n        </div>\n    )\n}\n\nexport default PostUpload\n","import { useState, useEffect } from 'react'\nimport { auth, db } from './firebase/firebase'\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button } from '@material-ui/core'\nimport Post from './components/Post'\nimport AuthModal from './components/Auth'\nimport PostUpload from './components/PostUpload'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst App = () => {\n\n  const IG_LOGO = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n  const [docs, setDocs] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [fetching, setFetching] = useState(true);\n  const [user, setUser] = useState(null);\n  const [newPost, setNewPost] = useState({});\n  const [morePost, setMorePost] = useState(true);\n\n  const [openModal, setOpenModal] = useState(false);\n  const [openModalLogin, setOpenModalLogin] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setUser(authUser)\n      } else {\n        setUser(null)\n      }\n    })\n    return () => {\n      unsubscribe();\n    }\n  }, [user])\n\n  const fetchData = () => {\n    let query = db.collection('posts')\n                  .orderBy('timestamp', 'desc');\n\n        if (posts.length !== 0) {\n          const lastVisible = docs[docs.length-1];\n          query = query.startAfter(lastVisible)\n        }\n\n        query.limit(10).get().then(snapshot => {\n          if (snapshot.docs.length === 0) setMorePost(false);\n          setDocs([...docs, ...snapshot.docs])\n          setPosts([...posts, ...snapshot.docs.map(doc => (\n            {\n              id: doc.id,\n              post: doc.data()\n            }\n          ))])\n        })\n        setTimeout(setFetching(false), 1000);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    if (fetching === false) return;\n    fetchData();\n  }, [fetching])\n\n  useEffect(() => {\n    if (Object.keys(newPost).length === 0) return;\n    setPosts(posts => [newPost, ...posts])\n  }, [newPost])\n\n  const checkBottom = (e) => {\n    const bottom = (\n      (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight) &\n      (fetching === false) &\n      (morePost === true))\n      if (bottom) {\n        setFetching(true)\n      }\n  }\n\n  console.log(posts);\n\n  return (\n    <div className=\"app\" onScroll={checkBottom}>\n      <AuthModal igLogo={IG_LOGO} openModal={openModal} setOpenModal={setOpenModal} \n                  openModalLogin={openModalLogin} setOpenModalLogin={setOpenModalLogin} setUser={setUser}\n      />\n      <div className=\"app__header\">\n        <img className=\"app__headerImage\" src={IG_LOGO} alt=\"instagram logo\" />\n        <div>\n          { \n            user ? \n            <Button onClick={() => {\n              auth.signOut();\n            }}>Log Out</Button>\n          : (\n              <>\n                <Button onClick={() => setOpenModal(true)}>SignUp</Button>\n                <Button onClick={() => setOpenModalLogin(true)}>SignIn</Button>\n              </>\n            )\n          }\n        </div>\n      </div>\n      <div className=\"contents\">\n        {user ? \n          <PostUpload username={user.displayName} setNewPost={setNewPost} />\n        :\n        <h4 className=\"app__notify\">\n          <Button onClick={() => setOpenModalLogin(true)}>Login to post</Button>\n        </h4>\n        }\n\n        <div className=\"app__post_view\">\n          <div className=\"app__post_wrapper\">\n            {\n              posts.map(({id, post}) => (\n                <Post \n                  key={id}\n                  postID={id}\n                  user={user}\n                  username={post.username}\n                  caption={post.caption}\n                  imageURL={post.imageURL}\n                />\n              ))\n            }\n\n            {\n              morePost ?\n              <div className=\"app__loading\">\n                <CircularProgress />\n              </div>\n              :\n              <h5 className=\"app__bottom\">No more post!</h5>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}